---
- name: Check if Go is installed
  stat:
    path: /usr/local/go/bin/go
  register: go
  
- name: Install Go
  when: not go.stat.exists
  block:
    - name: Remove any previous Go installation 
      file:
        path: /usr/local/go
        state: absent

    - name: Download binary
      vars:
        architecture: "{{'arm64' if ansible_architecture == 'aarch64' else ansible_architecture}}"
      get_url:
        url: "https://go.dev/dl/go1.24.2.linux-{{ architecture }}.tar.gz"
        dest: /tmp/go.tar.gz
        # 0644 for read/write permissions, 0777 for execute permissions
        mode: 0644

    - name: Extract binary
      become: true
      unarchive:
        src: /tmp/go.tar.gz
        dest: /usr/local
        remote_src: true

    - name: Add Go to path
      become: true
      lineinfile:
        path: /etc/profile
        line: 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin'
        create: yes

- name: Install xcaddy
  become: true
  shell: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
  environment:
    PATH: $PATH:/usr/local/go/bin
    GOPATH: "{{ ansible_env.HOME }}/go"
  args:
    executable: /bin/bash
    # prevent the command from running if xcaddy already exist{
    creates: "{{ ansible_env.HOME }}/go/bin/xcaddy"

- name: Check if caddy is installed
  stat:
    path: /usr/local/bin/caddy
  register: caddy

- name: Setup caddy
  when: not caddy.stat.exists
  block:
  - name: Build caddy with porkbun
    become: true
    shell: xcaddy build latest --with github.com/caddy-dns/porkbun
    environment:
      PATH: "$PATH:/usr/local/go/bin/:{{ ansible_env.HOME }}/go/bin"

  - name: Move caddy to local binaries
    become: true
    ansible.builtin.command:
      cmd: "mv {{ ansible_env.HOME }}/caddy /usr/local/bin/caddy"
